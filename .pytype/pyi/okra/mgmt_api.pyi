# (generated with --quick)

import datetime
import logging
import okra.models
from typing import Any, Dict, List, Optional, Tuple, Type, TypeVar

Author: Type[okra.models.Author]
DataAccessLayer: Type[okra.models.DataAccessLayer]
Meta: Type[okra.models.Meta]
datetime: Type[datetime.datetime]
logger: logging.Logger
logging: module
okra_api_pb2: module
os: module
pd: module

AnyStr = TypeVar('AnyStr', str, bytes)

def date_toiso(datetime, timespec = ...) -> Any: ...
def get_truck_factor_by_project(owner, project, dal) -> Tuple[Any, Any]: ...
def msg_repository_info(dal: okra.models.DataAccessLayer) -> Any: ...
def msg_repository_metric() -> None: ...
def tbl_contributor() -> None: ...
def tbl_repository_metrics(dburl: str, rd: list, pqcache: str, name = ...) -> List[Dict[str, Any]]: ...
def total_number_of_contributors_by_project(owner, project, dal) -> int: ...
def total_number_of_files_by_project(owner, project, dal) -> int: ...
def urljoin(base: AnyStr, url: Optional[AnyStr], allow_fragments: bool = ...) -> AnyStr: ...
